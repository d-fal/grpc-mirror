// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/protobufs/mirrorpb/pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null int32

const (
	Null_NULL_VALUE Null = 0
)

var Null_name = map[int32]string{
	0: "NULL_VALUE",
}

var Null_value = map[string]int32{
	"NULL_VALUE": 0,
}

func (x Null) String() string {
	return proto.EnumName(Null_name, int32(x))
}

func (Null) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{0}
}

type Value struct {
	// Types that are valid to be assigned to Kind:
	//	*Value_NullValue
	//	*Value_NumberValue
	//	*Value_StringValue
	//	*Value_BoolValue
	//	*Value_StructValue
	//	*Value_IntValue
	Kind                 isValue_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{0}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Kind interface {
	isValue_Kind()
}

type Value_NullValue struct {
	NullValue Null `protobuf:"varint,1,opt,name=null_value,json=nullValue,proto3,enum=hafhashtad.pb.Null,oneof"`
}

type Value_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_StructValue struct {
	StructValue *Struct `protobuf:"bytes,5,opt,name=struct_value,json=structValue,proto3,oneof"`
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,6,opt,name=int_value,json=intValue,proto3,oneof"`
}

func (*Value_NullValue) isValue_Kind() {}

func (*Value_NumberValue) isValue_Kind() {}

func (*Value_StringValue) isValue_Kind() {}

func (*Value_BoolValue) isValue_Kind() {}

func (*Value_StructValue) isValue_Kind() {}

func (*Value_IntValue) isValue_Kind() {}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Value) GetNullValue() Null {
	if x, ok := m.GetKind().(*Value_NullValue); ok {
		return x.NullValue
	}
	return Null_NULL_VALUE
}

func (m *Value) GetNumberValue() float64 {
	if x, ok := m.GetKind().(*Value_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (m *Value) GetStringValue() string {
	if x, ok := m.GetKind().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Value) GetBoolValue() bool {
	if x, ok := m.GetKind().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *Value) GetStructValue() *Struct {
	if x, ok := m.GetKind().(*Value_StructValue); ok {
		return x.StructValue
	}
	return nil
}

func (m *Value) GetIntValue() int64 {
	if x, ok := m.GetKind().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Value_NullValue)(nil),
		(*Value_NumberValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_StructValue)(nil),
		(*Value_IntValue)(nil),
	}
}

type Struct struct {
	Fields               map[string]*Value `protobuf:"bytes,1,rep,name=Fields,json=fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Struct) Reset()         { *m = Struct{} }
func (m *Struct) String() string { return proto.CompactTextString(m) }
func (*Struct) ProtoMessage()    {}
func (*Struct) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{1}
}

func (m *Struct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Struct.Unmarshal(m, b)
}
func (m *Struct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Struct.Marshal(b, m, deterministic)
}
func (m *Struct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Struct.Merge(m, src)
}
func (m *Struct) XXX_Size() int {
	return xxx_messageInfo_Struct.Size(m)
}
func (m *Struct) XXX_DiscardUnknown() {
	xxx_messageInfo_Struct.DiscardUnknown(m)
}

var xxx_messageInfo_Struct proto.InternalMessageInfo

func (m *Struct) GetFields() map[string]*Value {
	if m != nil {
		return m.Fields
	}
	return nil
}

type InternalRequest struct {
	TxnType              int32    `protobuf:"varint,1,opt,name=txnType,proto3" json:"txnType,omitempty"`
	Request              *Struct  `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalRequest) Reset()         { *m = InternalRequest{} }
func (m *InternalRequest) String() string { return proto.CompactTextString(m) }
func (*InternalRequest) ProtoMessage()    {}
func (*InternalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{2}
}

func (m *InternalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRequest.Unmarshal(m, b)
}
func (m *InternalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRequest.Marshal(b, m, deterministic)
}
func (m *InternalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRequest.Merge(m, src)
}
func (m *InternalRequest) XXX_Size() int {
	return xxx_messageInfo_InternalRequest.Size(m)
}
func (m *InternalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRequest proto.InternalMessageInfo

func (m *InternalRequest) GetTxnType() int32 {
	if m != nil {
		return m.TxnType
	}
	return 0
}

func (m *InternalRequest) GetRequest() *Struct {
	if m != nil {
		return m.Request
	}
	return nil
}

type InternalResponse struct {
	Response             *Struct  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	OriginAddress        string   `protobuf:"bytes,2,opt,name=OriginAddress,json=originAddress,proto3" json:"OriginAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalResponse) Reset()         { *m = InternalResponse{} }
func (m *InternalResponse) String() string { return proto.CompactTextString(m) }
func (*InternalResponse) ProtoMessage()    {}
func (*InternalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{3}
}

func (m *InternalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalResponse.Unmarshal(m, b)
}
func (m *InternalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalResponse.Marshal(b, m, deterministic)
}
func (m *InternalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalResponse.Merge(m, src)
}
func (m *InternalResponse) XXX_Size() int {
	return xxx_messageInfo_InternalResponse.Size(m)
}
func (m *InternalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalResponse proto.InternalMessageInfo

func (m *InternalResponse) GetResponse() *Struct {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *InternalResponse) GetOriginAddress() string {
	if m != nil {
		return m.OriginAddress
	}
	return ""
}

type TopupRequestType struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Msisdn               string   `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Pin                  string   `protobuf:"bytes,4,opt,name=pin,proto3" json:"pin,omitempty"`
	MobNo                string   `protobuf:"bytes,5,opt,name=mob_no,json=mobNo,proto3" json:"mob_no,omitempty"`
	Amount               int32    `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 int32    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	AddData              string   `protobuf:"bytes,9,opt,name=add_data,json=addData,proto3" json:"add_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopupRequestType) Reset()         { *m = TopupRequestType{} }
func (m *TopupRequestType) String() string { return proto.CompactTextString(m) }
func (*TopupRequestType) ProtoMessage()    {}
func (*TopupRequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{4}
}

func (m *TopupRequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopupRequestType.Unmarshal(m, b)
}
func (m *TopupRequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopupRequestType.Marshal(b, m, deterministic)
}
func (m *TopupRequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopupRequestType.Merge(m, src)
}
func (m *TopupRequestType) XXX_Size() int {
	return xxx_messageInfo_TopupRequestType.Size(m)
}
func (m *TopupRequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_TopupRequestType.DiscardUnknown(m)
}

var xxx_messageInfo_TopupRequestType proto.InternalMessageInfo

func (m *TopupRequestType) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TopupRequestType) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TopupRequestType) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *TopupRequestType) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *TopupRequestType) GetMobNo() string {
	if m != nil {
		return m.MobNo
	}
	return ""
}

func (m *TopupRequestType) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TopupRequestType) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TopupRequestType) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *TopupRequestType) GetAddData() string {
	if m != nil {
		return m.AddData
	}
	return ""
}

type TopupResponseType struct {
	RespCode             int32    `protobuf:"varint,1,opt,name=resp_code,json=respCode,proto3" json:"resp_code,omitempty"`
	Ref                  string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Serial               string   `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopupResponseType) Reset()         { *m = TopupResponseType{} }
func (m *TopupResponseType) String() string { return proto.CompactTextString(m) }
func (*TopupResponseType) ProtoMessage()    {}
func (*TopupResponseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{5}
}

func (m *TopupResponseType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopupResponseType.Unmarshal(m, b)
}
func (m *TopupResponseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopupResponseType.Marshal(b, m, deterministic)
}
func (m *TopupResponseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopupResponseType.Merge(m, src)
}
func (m *TopupResponseType) XXX_Size() int {
	return xxx_messageInfo_TopupResponseType.Size(m)
}
func (m *TopupResponseType) XXX_DiscardUnknown() {
	xxx_messageInfo_TopupResponseType.DiscardUnknown(m)
}

var xxx_messageInfo_TopupResponseType proto.InternalMessageInfo

func (m *TopupResponseType) GetRespCode() int32 {
	if m != nil {
		return m.RespCode
	}
	return 0
}

func (m *TopupResponseType) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *TopupResponseType) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

type GeneralRequest struct {
	MobileNumber         string   `protobuf:"bytes,1,opt,name=mobileNumber,proto3" json:"mobileNumber,omitempty"`
	ClientIP             string   `protobuf:"bytes,2,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
	Imei                 string   `protobuf:"bytes,3,opt,name=imei,proto3" json:"imei,omitempty"`
	Devid                string   `protobuf:"bytes,4,opt,name=devid,proto3" json:"devid,omitempty"`
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	DeviceInfo           string   `protobuf:"bytes,6,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	OsVersion            string   `protobuf:"bytes,7,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	TrackingCode         string   `protobuf:"bytes,8,opt,name=trackingCode,proto3" json:"trackingCode,omitempty"`
	AppVersion           int32    `protobuf:"varint,9,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	PaymentChannel       string   `protobuf:"bytes,10,opt,name=paymentChannel,proto3" json:"paymentChannel,omitempty"`
	OfferAmount          float64  `protobuf:"fixed64,11,opt,name=OfferAmount,json=offerAmount,proto3" json:"OfferAmount,omitempty"`
	Txntype              int32    `protobuf:"varint,12,opt,name=txntype,proto3" json:"txntype,omitempty"`
	MType                string   `protobuf:"bytes,13,opt,name=mType,proto3" json:"mType,omitempty"`
	Data1                string   `protobuf:"bytes,14,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2                string   `protobuf:"bytes,15,opt,name=data2,proto3" json:"data2,omitempty"`
	MicroserviceData     string   `protobuf:"bytes,16,opt,name=microserviceData,proto3" json:"microserviceData,omitempty"`
	MicroserviceId       string   `protobuf:"bytes,17,opt,name=microserviceId,proto3" json:"microserviceId,omitempty"`
	Request              *Struct  `protobuf:"bytes,18,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralRequest) Reset()         { *m = GeneralRequest{} }
func (m *GeneralRequest) String() string { return proto.CompactTextString(m) }
func (*GeneralRequest) ProtoMessage()    {}
func (*GeneralRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{6}
}

func (m *GeneralRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralRequest.Unmarshal(m, b)
}
func (m *GeneralRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralRequest.Marshal(b, m, deterministic)
}
func (m *GeneralRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralRequest.Merge(m, src)
}
func (m *GeneralRequest) XXX_Size() int {
	return xxx_messageInfo_GeneralRequest.Size(m)
}
func (m *GeneralRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralRequest proto.InternalMessageInfo

func (m *GeneralRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *GeneralRequest) GetClientIP() string {
	if m != nil {
		return m.ClientIP
	}
	return ""
}

func (m *GeneralRequest) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *GeneralRequest) GetDevid() string {
	if m != nil {
		return m.Devid
	}
	return ""
}

func (m *GeneralRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *GeneralRequest) GetDeviceInfo() string {
	if m != nil {
		return m.DeviceInfo
	}
	return ""
}

func (m *GeneralRequest) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *GeneralRequest) GetTrackingCode() string {
	if m != nil {
		return m.TrackingCode
	}
	return ""
}

func (m *GeneralRequest) GetAppVersion() int32 {
	if m != nil {
		return m.AppVersion
	}
	return 0
}

func (m *GeneralRequest) GetPaymentChannel() string {
	if m != nil {
		return m.PaymentChannel
	}
	return ""
}

func (m *GeneralRequest) GetOfferAmount() float64 {
	if m != nil {
		return m.OfferAmount
	}
	return 0
}

func (m *GeneralRequest) GetTxntype() int32 {
	if m != nil {
		return m.Txntype
	}
	return 0
}

func (m *GeneralRequest) GetMType() string {
	if m != nil {
		return m.MType
	}
	return ""
}

func (m *GeneralRequest) GetData1() string {
	if m != nil {
		return m.Data1
	}
	return ""
}

func (m *GeneralRequest) GetData2() string {
	if m != nil {
		return m.Data2
	}
	return ""
}

func (m *GeneralRequest) GetMicroserviceData() string {
	if m != nil {
		return m.MicroserviceData
	}
	return ""
}

func (m *GeneralRequest) GetMicroserviceId() string {
	if m != nil {
		return m.MicroserviceId
	}
	return ""
}

func (m *GeneralRequest) GetRequest() *Struct {
	if m != nil {
		return m.Request
	}
	return nil
}

type GeneralResponse struct {
	ResCode              int64    `protobuf:"varint,1,opt,name=resCode,proto3" json:"resCode,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response             *Struct  `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralResponse) Reset()         { *m = GeneralResponse{} }
func (m *GeneralResponse) String() string { return proto.CompactTextString(m) }
func (*GeneralResponse) ProtoMessage()    {}
func (*GeneralResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f1dd3a70fff534a, []int{7}
}

func (m *GeneralResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralResponse.Unmarshal(m, b)
}
func (m *GeneralResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralResponse.Marshal(b, m, deterministic)
}
func (m *GeneralResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralResponse.Merge(m, src)
}
func (m *GeneralResponse) XXX_Size() int {
	return xxx_messageInfo_GeneralResponse.Size(m)
}
func (m *GeneralResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralResponse proto.InternalMessageInfo

func (m *GeneralResponse) GetResCode() int64 {
	if m != nil {
		return m.ResCode
	}
	return 0
}

func (m *GeneralResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GeneralResponse) GetResponse() *Struct {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterEnum("hafhashtad.pb.Null", Null_name, Null_value)
	proto.RegisterType((*Value)(nil), "hafhashtad.pb.Value")
	proto.RegisterType((*Struct)(nil), "hafhashtad.pb.Struct")
	proto.RegisterMapType((map[string]*Value)(nil), "hafhashtad.pb.Struct.FieldsEntry")
	proto.RegisterType((*InternalRequest)(nil), "hafhashtad.pb.InternalRequest")
	proto.RegisterType((*InternalResponse)(nil), "hafhashtad.pb.InternalResponse")
	proto.RegisterType((*TopupRequestType)(nil), "hafhashtad.pb.TopupRequestType")
	proto.RegisterType((*TopupResponseType)(nil), "hafhashtad.pb.TopupResponseType")
	proto.RegisterType((*GeneralRequest)(nil), "hafhashtad.pb.GeneralRequest")
	proto.RegisterType((*GeneralResponse)(nil), "hafhashtad.pb.GeneralResponse")
}

func init() { proto.RegisterFile("pkg/protobufs/mirrorpb/pb.proto", fileDescriptor_2f1dd3a70fff534a) }

var fileDescriptor_2f1dd3a70fff534a = []byte{
	// 1093 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x4e, 0x23, 0x37,
	0x14, 0xce, 0x90, 0x1f, 0x32, 0x27, 0x10, 0x82, 0x97, 0x5d, 0x4d, 0x69, 0x17, 0xd2, 0xb4, 0xaa,
	0x22, 0x2e, 0xa0, 0x9b, 0xf6, 0xa2, 0xdd, 0x3b, 0x08, 0xdb, 0x05, 0x89, 0x05, 0x3a, 0x04, 0x2e,
	0x56, 0x48, 0xa9, 0x27, 0xe3, 0x04, 0x2b, 0x33, 0xf6, 0xd4, 0xf6, 0x50, 0x78, 0x86, 0xde, 0xf6,
	0x0d, 0xfa, 0x28, 0x55, 0x5f, 0xa5, 0xcf, 0x51, 0xd9, 0xe3, 0xc9, 0xdf, 0x82, 0xb4, 0x12, 0xdc,
	0xf9, 0x7c, 0xfe, 0xe6, 0x3b, 0x3e, 0x9f, 0xcf, 0x71, 0x02, 0xdb, 0xc9, 0x78, 0xb4, 0x97, 0x08,
	0xae, 0x78, 0x90, 0x0e, 0xe5, 0x5e, 0x4c, 0x85, 0xe0, 0x22, 0x09, 0xf6, 0x92, 0x60, 0xd7, 0xa0,
	0x68, 0xf5, 0x06, 0x0f, 0x6f, 0xb0, 0xbc, 0x51, 0x38, 0xdc, 0x4d, 0x82, 0xd6, 0x9f, 0x4b, 0x50,
	0xbe, 0xc2, 0x51, 0x4a, 0xd0, 0x8f, 0x00, 0x2c, 0x8d, 0xa2, 0xfe, 0xad, 0x8e, 0x3c, 0xa7, 0xe9,
	0xb4, 0xeb, 0x9d, 0x17, 0xbb, 0x73, 0xec, 0xdd, 0xd3, 0x34, 0x8a, 0x8e, 0x0a, 0xbe, 0xab, 0x89,
	0xd9, 0x57, 0xdf, 0xc0, 0x0a, 0x4b, 0xe3, 0x80, 0x08, 0xfb, 0xdd, 0x52, 0xd3, 0x69, 0x3b, 0x47,
	0x05, 0xbf, 0x96, 0xa1, 0x13, 0x92, 0x54, 0x82, 0xb2, 0x91, 0x25, 0x15, 0x9b, 0x4e, 0xdb, 0xd5,
	0xa4, 0x0c, 0xcd, 0x48, 0xdb, 0x00, 0x01, 0xe7, 0x79, 0xfe, 0x52, 0xd3, 0x69, 0x57, 0x75, 0x2a,
	0x8d, 0x65, 0x84, 0xb7, 0x46, 0x25, 0x1d, 0x28, 0x4b, 0x29, 0x37, 0x9d, 0x76, 0xad, 0xf3, 0x72,
	0xe1, 0x88, 0x17, 0x86, 0x62, 0xc5, 0xd3, 0x81, 0xca, 0xbe, 0x7d, 0x0d, 0x2e, 0x65, 0xf9, 0x87,
	0x95, 0xa6, 0xd3, 0x2e, 0x1e, 0x15, 0xfc, 0x2a, 0x65, 0xd9, 0xf6, 0x41, 0x05, 0x4a, 0x63, 0xca,
	0xc2, 0xd6, 0x5f, 0x0e, 0x54, 0x32, 0x01, 0xf4, 0x33, 0x54, 0x7e, 0xa1, 0x24, 0x0a, 0xa5, 0xe7,
	0x34, 0x8b, 0xed, 0x5a, 0xe7, 0xeb, 0x07, 0xf3, 0xec, 0x66, 0x9c, 0x77, 0x4c, 0x89, 0x7b, 0xbf,
	0x32, 0x34, 0xc1, 0xe6, 0x19, 0xd4, 0x66, 0x60, 0xd4, 0x80, 0xe2, 0x98, 0xdc, 0x1b, 0x47, 0x5d,
	0x5f, 0x2f, 0xd1, 0x0e, 0x94, 0xa7, 0x6e, 0xd5, 0x3a, 0x1b, 0x0b, 0xd2, 0xe6, 0x4c, 0x7e, 0x46,
	0x79, 0xbb, 0xf4, 0x93, 0xd3, 0xba, 0x86, 0xb5, 0x63, 0xa6, 0x88, 0x60, 0x38, 0xf2, 0xc9, 0xef,
	0x29, 0x91, 0x0a, 0x79, 0xb0, 0xac, 0xee, 0x58, 0xef, 0x3e, 0xc9, 0xae, 0xaa, 0xec, 0xe7, 0x21,
	0xda, 0x83, 0x65, 0x91, 0x91, 0xac, 0xfc, 0xc3, 0x0e, 0xf9, 0x39, 0xab, 0x35, 0x86, 0xc6, 0x54,
	0x5d, 0x26, 0x9c, 0x49, 0x82, 0xde, 0x40, 0x55, 0xd8, 0xb5, 0xd1, 0x7f, 0x54, 0x65, 0x42, 0x43,
	0xdf, 0xc2, 0xea, 0x99, 0xa0, 0x23, 0xca, 0xf6, 0xc3, 0x50, 0x10, 0x29, 0x4d, 0x76, 0xd7, 0x5f,
	0xe5, 0xb3, 0x60, 0xeb, 0x3f, 0x07, 0x1a, 0x3d, 0x9e, 0xa4, 0x89, 0x2d, 0xc4, 0x1c, 0x79, 0x13,
	0xaa, 0xa9, 0xd4, 0x07, 0x88, 0x89, 0xb5, 0x69, 0x12, 0xeb, 0xbd, 0x04, 0x4b, 0xf9, 0x07, 0x17,
	0xa1, 0x55, 0x9c, 0xc4, 0xe8, 0x15, 0x54, 0x62, 0x49, 0x65, 0xc8, 0xb2, 0x8e, 0xf2, 0x6d, 0xa4,
	0x1d, 0x4f, 0x28, 0x33, 0x3d, 0xe4, 0xfa, 0x7a, 0x89, 0x5e, 0x42, 0x25, 0xe6, 0x41, 0x9f, 0x71,
	0xd3, 0x35, 0xae, 0x5f, 0x8e, 0x79, 0x70, 0xca, 0xb5, 0x00, 0x8e, 0x79, 0xca, 0x94, 0xe9, 0x89,
	0xb2, 0x6f, 0x23, 0x84, 0xa0, 0xa4, 0xb4, 0xb5, 0xcb, 0x06, 0x35, 0x6b, 0x8d, 0x85, 0x44, 0x0e,
	0xbc, 0xaa, 0x11, 0x30, 0x6b, 0xf4, 0x05, 0x54, 0x71, 0x18, 0xf6, 0x43, 0xac, 0xb0, 0xe7, 0x1a,
	0x7c, 0x19, 0x87, 0xe1, 0x21, 0x56, 0xb8, 0xf5, 0x11, 0xd6, 0x6d, 0x9d, 0x99, 0x3f, 0xa6, 0xd0,
	0x2f, 0xc1, 0xd5, 0x7e, 0xf5, 0x07, 0x3c, 0xcc, 0xef, 0xcd, 0x18, 0xd8, 0xe5, 0x21, 0xd1, 0xa7,
	0x16, 0x64, 0x68, 0x8b, 0xd4, 0x4b, 0x7d, 0x3c, 0x49, 0x04, 0xc5, 0x51, 0x5e, 0x5f, 0x16, 0xb5,
	0xfe, 0x29, 0x41, 0xfd, 0x3d, 0x61, 0x44, 0x4c, 0xfb, 0xa1, 0x05, 0x2b, 0x31, 0x0f, 0x68, 0x44,
	0x4e, 0xcd, 0xdc, 0x59, 0x1b, 0xe7, 0x30, 0x6d, 0xe5, 0x20, 0xa2, 0x84, 0xa9, 0xe3, 0xf3, 0xdc,
	0xca, 0x3c, 0xd6, 0xd5, 0xd1, 0x98, 0x50, 0x9b, 0xc8, 0xac, 0xd1, 0x06, 0x94, 0x43, 0x72, 0x4b,
	0x43, 0x6b, 0x64, 0x16, 0x98, 0x0b, 0x89, 0xb0, 0x1a, 0x72, 0x11, 0x5b, 0x33, 0x27, 0x31, 0xda,
	0x02, 0xd0, 0xa4, 0x01, 0x39, 0x66, 0x43, 0x6e, 0x3c, 0x75, 0xfd, 0x19, 0x04, 0x7d, 0x05, 0x2e,
	0x97, 0x57, 0x44, 0x48, 0xca, 0x99, 0x31, 0xd7, 0xf5, 0xa7, 0x80, 0xae, 0x41, 0x09, 0x3c, 0x18,
	0x53, 0x36, 0xd2, 0x86, 0x58, 0xa7, 0xe7, 0x30, 0x9d, 0x01, 0x27, 0x49, 0x2e, 0xe1, 0x1a, 0x0b,
	0x67, 0x10, 0xf4, 0x1d, 0xd4, 0x13, 0x7c, 0x1f, 0x13, 0xa6, 0xba, 0x37, 0x98, 0x31, 0x12, 0x79,
	0x60, 0x54, 0x16, 0x50, 0xd4, 0x84, 0xda, 0xd9, 0x70, 0x48, 0xc4, 0x7e, 0x76, 0xfd, 0x35, 0xfd,
	0x6c, 0xf9, 0x35, 0x3e, 0x85, 0xec, 0x84, 0x99, 0x36, 0x58, 0x99, 0x4c, 0x98, 0xe9, 0x84, 0x0d,
	0x28, 0xc7, 0x66, 0xf2, 0x56, 0x6d, 0x2f, 0xf5, 0x2c, 0xaa, 0xfb, 0xe0, 0x8d, 0x57, 0xb7, 0x6e,
	0xe9, 0x20, 0x47, 0x3b, 0xde, 0xda, 0x14, 0xed, 0xa0, 0x1d, 0x68, 0xc4, 0x74, 0x20, 0xb8, 0x24,
	0x42, 0x7b, 0xa3, 0x1b, 0xc6, 0x6b, 0x18, 0xc2, 0x27, 0xb8, 0xae, 0x68, 0x16, 0x3b, 0x0e, 0xbd,
	0xf5, 0xac, 0xa2, 0x79, 0x74, 0x76, 0xee, 0xd1, 0x67, 0xcd, 0xfd, 0x1d, 0xac, 0x4d, 0x9a, 0xc8,
	0xce, 0xb0, 0xa7, 0x35, 0x64, 0x37, 0xef, 0xce, 0xa2, 0x9f, 0x87, 0x7a, 0x27, 0x26, 0x52, 0xe2,
	0x11, 0xb1, 0xad, 0x93, 0x87, 0x73, 0x4f, 0x45, 0xf1, 0xb3, 0x9e, 0x8a, 0x9d, 0x57, 0x50, 0xd2,
	0xbf, 0x24, 0xa8, 0x0e, 0x70, 0x7a, 0x79, 0x72, 0xd2, 0xbf, 0xda, 0x3f, 0xb9, 0x7c, 0xd7, 0x28,
	0x74, 0xae, 0x61, 0xc5, 0xcc, 0xcc, 0x45, 0x56, 0x14, 0x3a, 0x81, 0xb2, 0x89, 0xd1, 0xf6, 0x82,
	0xe2, 0xe2, 0x0b, 0xb2, 0xd9, 0x7c, 0x98, 0x30, 0x1d, 0xbd, 0x56, 0xa1, 0xf3, 0x1b, 0xac, 0x9c,
	0x89, 0x90, 0x88, 0xfd, 0x10, 0x27, 0x8a, 0x08, 0x74, 0x0e, 0xb5, 0xcb, 0x24, 0xc4, 0x8a, 0x18,
	0x14, 0x6d, 0x2d, 0x48, 0x2c, 0xbc, 0xb8, 0x9b, 0xdb, 0x8f, 0xee, 0x67, 0x59, 0x5a, 0x85, 0xce,
	0x10, 0xea, 0xfb, 0x22, 0xa0, 0x6a, 0x9a, 0xa3, 0x07, 0x6b, 0xdd, 0x1b, 0x32, 0x18, 0xfb, 0x24,
	0x21, 0x8a, 0x2a, 0xdd, 0xa1, 0xcf, 0x90, 0xa7, 0x0f, 0xb5, 0x6e, 0x94, 0x06, 0x33, 0x85, 0xbc,
	0x27, 0x4a, 0x23, 0x66, 0xc8, 0x9e, 0x21, 0xc1, 0xbf, 0x0e, 0xac, 0x75, 0x71, 0x9c, 0x60, 0x3a,
	0x62, 0x33, 0xa5, 0xe4, 0xcc, 0x0f, 0xf6, 0xea, 0x9f, 0x9e, 0x09, 0x5d, 0xc3, 0x0b, 0x7d, 0x76,
	0x9b, 0xeb, 0x90, 0xca, 0x81, 0x19, 0xbe, 0xa7, 0x2b, 0xb7, 0x9d, 0xef, 0x9d, 0x4e, 0x08, 0xeb,
	0x17, 0x44, 0xa9, 0x88, 0xe8, 0xd1, 0xcf, 0x0b, 0x39, 0x03, 0xc8, 0xc0, 0x03, 0x1a, 0x45, 0xcf,
	0xe1, 0xd6, 0xdf, 0x45, 0x80, 0xde, 0xdd, 0xc4, 0xa8, 0x4b, 0x40, 0xe6, 0xce, 0x7b, 0x77, 0xec,
	0x9c, 0x88, 0x98, 0x4a, 0xf3, 0x30, 0xbd, 0x5e, 0xd0, 0x99, 0x7f, 0xbf, 0x37, 0xb7, 0x1e, 0xdb,
	0x9e, 0x38, 0x75, 0x6a, 0x6e, 0xb9, 0x77, 0xc7, 0x7a, 0x7c, 0x4c, 0x9e, 0x41, 0xef, 0x57, 0xa8,
	0xe7, 0xc7, 0x3c, 0x96, 0x87, 0x9c, 0x91, 0xa7, 0x4b, 0x9e, 0x80, 0x6b, 0x7c, 0x30, 0xc3, 0xfb,
	0x64, 0xb5, 0x0f, 0xc6, 0x55, 0x9f, 0xdc, 0x12, 0x21, 0x9f, 0x2e, 0x77, 0x50, 0xfa, 0xb8, 0x94,
	0x04, 0x41, 0xc5, 0xfc, 0x0b, 0xfe, 0xe1, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xad, 0xc2,
	0xed, 0x28, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TopupServiceClient is the client API for TopupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopupServiceClient interface {
	Topup(ctx context.Context, in *TopupRequestType, opts ...grpc.CallOption) (*TopupResponseType, error)
}

type topupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTopupServiceClient(cc grpc.ClientConnInterface) TopupServiceClient {
	return &topupServiceClient{cc}
}

func (c *topupServiceClient) Topup(ctx context.Context, in *TopupRequestType, opts ...grpc.CallOption) (*TopupResponseType, error) {
	out := new(TopupResponseType)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TopupService/Topup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopupServiceServer is the server API for TopupService service.
type TopupServiceServer interface {
	Topup(context.Context, *TopupRequestType) (*TopupResponseType, error)
}

// UnimplementedTopupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTopupServiceServer struct {
}

func (*UnimplementedTopupServiceServer) Topup(ctx context.Context, req *TopupRequestType) (*TopupResponseType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Topup not implemented")
}

func RegisterTopupServiceServer(s *grpc.Server, srv TopupServiceServer) {
	s.RegisterService(&_TopupService_serviceDesc, srv)
}

func _TopupService_Topup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopupRequestType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopupServiceServer).Topup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TopupService/Topup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopupServiceServer).Topup(ctx, req.(*TopupRequestType))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.TopupService",
	HandlerType: (*TopupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Topup",
			Handler:    _TopupService_Topup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// OrderAdapterClient is the client API for OrderAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderAdapterClient interface {
	UpdateOrder(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error)
}

type orderAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderAdapterClient(cc grpc.ClientConnInterface) OrderAdapterClient {
	return &orderAdapterClient{cc}
}

func (c *orderAdapterClient) UpdateOrder(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error) {
	out := new(InternalResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.OrderAdapter/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderAdapterServer is the server API for OrderAdapter service.
type OrderAdapterServer interface {
	UpdateOrder(context.Context, *InternalRequest) (*InternalResponse, error)
}

// UnimplementedOrderAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedOrderAdapterServer struct {
}

func (*UnimplementedOrderAdapterServer) UpdateOrder(ctx context.Context, req *InternalRequest) (*InternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}

func RegisterOrderAdapterServer(s *grpc.Server, srv OrderAdapterServer) {
	s.RegisterService(&_OrderAdapter_serviceDesc, srv)
}

func _OrderAdapter_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderAdapterServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.OrderAdapter/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderAdapterServer).UpdateOrder(ctx, req.(*InternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.OrderAdapter",
	HandlerType: (*OrderAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateOrder",
			Handler:    _OrderAdapter_UpdateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// ArbiterAdapterClient is the client API for ArbiterAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArbiterAdapterClient interface {
	CheckRepetition(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error)
}

type arbiterAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewArbiterAdapterClient(cc grpc.ClientConnInterface) ArbiterAdapterClient {
	return &arbiterAdapterClient{cc}
}

func (c *arbiterAdapterClient) CheckRepetition(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error) {
	out := new(InternalResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.ArbiterAdapter/CheckRepetition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArbiterAdapterServer is the server API for ArbiterAdapter service.
type ArbiterAdapterServer interface {
	CheckRepetition(context.Context, *InternalRequest) (*InternalResponse, error)
}

// UnimplementedArbiterAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedArbiterAdapterServer struct {
}

func (*UnimplementedArbiterAdapterServer) CheckRepetition(ctx context.Context, req *InternalRequest) (*InternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckRepetition not implemented")
}

func RegisterArbiterAdapterServer(s *grpc.Server, srv ArbiterAdapterServer) {
	s.RegisterService(&_ArbiterAdapter_serviceDesc, srv)
}

func _ArbiterAdapter_CheckRepetition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArbiterAdapterServer).CheckRepetition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.ArbiterAdapter/CheckRepetition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArbiterAdapterServer).CheckRepetition(ctx, req.(*InternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArbiterAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.ArbiterAdapter",
	HandlerType: (*ArbiterAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckRepetition",
			Handler:    _ArbiterAdapter_CheckRepetition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// ClubAdapterClient is the client API for ClubAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClubAdapterClient interface {
	GetClubInfo(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error)
}

type clubAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewClubAdapterClient(cc grpc.ClientConnInterface) ClubAdapterClient {
	return &clubAdapterClient{cc}
}

func (c *clubAdapterClient) GetClubInfo(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error) {
	out := new(InternalResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.ClubAdapter/GetClubInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClubAdapterServer is the server API for ClubAdapter service.
type ClubAdapterServer interface {
	GetClubInfo(context.Context, *InternalRequest) (*InternalResponse, error)
}

// UnimplementedClubAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedClubAdapterServer struct {
}

func (*UnimplementedClubAdapterServer) GetClubInfo(ctx context.Context, req *InternalRequest) (*InternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClubInfo not implemented")
}

func RegisterClubAdapterServer(s *grpc.Server, srv ClubAdapterServer) {
	s.RegisterService(&_ClubAdapter_serviceDesc, srv)
}

func _ClubAdapter_GetClubInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClubAdapterServer).GetClubInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.ClubAdapter/GetClubInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClubAdapterServer).GetClubInfo(ctx, req.(*InternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClubAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.ClubAdapter",
	HandlerType: (*ClubAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClubInfo",
			Handler:    _ClubAdapter_GetClubInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// CampaignAdapterClient is the client API for CampaignAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CampaignAdapterClient interface {
	InternalMessage(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error)
	GetCampaignDiscount(ctx context.Context, opts ...grpc.CallOption) (CampaignAdapter_GetCampaignDiscountClient, error)
}

type campaignAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewCampaignAdapterClient(cc grpc.ClientConnInterface) CampaignAdapterClient {
	return &campaignAdapterClient{cc}
}

func (c *campaignAdapterClient) InternalMessage(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error) {
	out := new(InternalResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.CampaignAdapter/InternalMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignAdapterClient) GetCampaignDiscount(ctx context.Context, opts ...grpc.CallOption) (CampaignAdapter_GetCampaignDiscountClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CampaignAdapter_serviceDesc.Streams[0], "/hafhashtad.pb.CampaignAdapter/GetCampaignDiscount", opts...)
	if err != nil {
		return nil, err
	}
	x := &campaignAdapterGetCampaignDiscountClient{stream}
	return x, nil
}

type CampaignAdapter_GetCampaignDiscountClient interface {
	Send(*InternalRequest) error
	Recv() (*InternalResponse, error)
	grpc.ClientStream
}

type campaignAdapterGetCampaignDiscountClient struct {
	grpc.ClientStream
}

func (x *campaignAdapterGetCampaignDiscountClient) Send(m *InternalRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *campaignAdapterGetCampaignDiscountClient) Recv() (*InternalResponse, error) {
	m := new(InternalResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CampaignAdapterServer is the server API for CampaignAdapter service.
type CampaignAdapterServer interface {
	InternalMessage(context.Context, *InternalRequest) (*InternalResponse, error)
	GetCampaignDiscount(CampaignAdapter_GetCampaignDiscountServer) error
}

// UnimplementedCampaignAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedCampaignAdapterServer struct {
}

func (*UnimplementedCampaignAdapterServer) InternalMessage(ctx context.Context, req *InternalRequest) (*InternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InternalMessage not implemented")
}
func (*UnimplementedCampaignAdapterServer) GetCampaignDiscount(srv CampaignAdapter_GetCampaignDiscountServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCampaignDiscount not implemented")
}

func RegisterCampaignAdapterServer(s *grpc.Server, srv CampaignAdapterServer) {
	s.RegisterService(&_CampaignAdapter_serviceDesc, srv)
}

func _CampaignAdapter_InternalMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignAdapterServer).InternalMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.CampaignAdapter/InternalMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignAdapterServer).InternalMessage(ctx, req.(*InternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CampaignAdapter_GetCampaignDiscount_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CampaignAdapterServer).GetCampaignDiscount(&campaignAdapterGetCampaignDiscountServer{stream})
}

type CampaignAdapter_GetCampaignDiscountServer interface {
	Send(*InternalResponse) error
	Recv() (*InternalRequest, error)
	grpc.ServerStream
}

type campaignAdapterGetCampaignDiscountServer struct {
	grpc.ServerStream
}

func (x *campaignAdapterGetCampaignDiscountServer) Send(m *InternalResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *campaignAdapterGetCampaignDiscountServer) Recv() (*InternalRequest, error) {
	m := new(InternalRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CampaignAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.CampaignAdapter",
	HandlerType: (*CampaignAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalMessage",
			Handler:    _CampaignAdapter_InternalMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCampaignDiscount",
			Handler:       _CampaignAdapter_GetCampaignDiscount_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// SettlementAdapterClient is the client API for SettlementAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SettlementAdapterClient interface {
	SettleBill(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error)
}

type settlementAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewSettlementAdapterClient(cc grpc.ClientConnInterface) SettlementAdapterClient {
	return &settlementAdapterClient{cc}
}

func (c *settlementAdapterClient) SettleBill(ctx context.Context, in *InternalRequest, opts ...grpc.CallOption) (*InternalResponse, error) {
	out := new(InternalResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.SettlementAdapter/SettleBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettlementAdapterServer is the server API for SettlementAdapter service.
type SettlementAdapterServer interface {
	SettleBill(context.Context, *InternalRequest) (*InternalResponse, error)
}

// UnimplementedSettlementAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedSettlementAdapterServer struct {
}

func (*UnimplementedSettlementAdapterServer) SettleBill(ctx context.Context, req *InternalRequest) (*InternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleBill not implemented")
}

func RegisterSettlementAdapterServer(s *grpc.Server, srv SettlementAdapterServer) {
	s.RegisterService(&_SettlementAdapter_serviceDesc, srv)
}

func _SettlementAdapter_SettleBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettlementAdapterServer).SettleBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.SettlementAdapter/SettleBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettlementAdapterServer).SettleBill(ctx, req.(*InternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SettlementAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.SettlementAdapter",
	HandlerType: (*SettlementAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SettleBill",
			Handler:    _SettlementAdapter_SettleBill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}

// TxnAdapterClient is the client API for TxnAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxnAdapterClient interface {
	CheckTxnPermission(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
	GetTxnToken(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
	CheckTxnIsDone(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
	TxnAdvice(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
	// rpc BidiTXNAdvice(GeneralRequest) returns (GeneralResponse) {}
	//
	TxnReverse(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
}

type txnAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewTxnAdapterClient(cc grpc.ClientConnInterface) TxnAdapterClient {
	return &txnAdapterClient{cc}
}

func (c *txnAdapterClient) CheckTxnPermission(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TxnAdapter/CheckTxnPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txnAdapterClient) GetTxnToken(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TxnAdapter/GetTxnToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txnAdapterClient) CheckTxnIsDone(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TxnAdapter/CheckTxnIsDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txnAdapterClient) TxnAdvice(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TxnAdapter/TxnAdvice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txnAdapterClient) TxnReverse(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/hafhashtad.pb.TxnAdapter/TxnReverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TxnAdapterServer is the server API for TxnAdapter service.
type TxnAdapterServer interface {
	CheckTxnPermission(context.Context, *GeneralRequest) (*GeneralResponse, error)
	GetTxnToken(context.Context, *GeneralRequest) (*GeneralResponse, error)
	CheckTxnIsDone(context.Context, *GeneralRequest) (*GeneralResponse, error)
	TxnAdvice(context.Context, *GeneralRequest) (*GeneralResponse, error)
	// rpc BidiTXNAdvice(GeneralRequest) returns (GeneralResponse) {}
	//
	TxnReverse(context.Context, *GeneralRequest) (*GeneralResponse, error)
}

// UnimplementedTxnAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedTxnAdapterServer struct {
}

func (*UnimplementedTxnAdapterServer) CheckTxnPermission(ctx context.Context, req *GeneralRequest) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckTxnPermission not implemented")
}
func (*UnimplementedTxnAdapterServer) GetTxnToken(ctx context.Context, req *GeneralRequest) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTxnToken not implemented")
}
func (*UnimplementedTxnAdapterServer) CheckTxnIsDone(ctx context.Context, req *GeneralRequest) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckTxnIsDone not implemented")
}
func (*UnimplementedTxnAdapterServer) TxnAdvice(ctx context.Context, req *GeneralRequest) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TxnAdvice not implemented")
}
func (*UnimplementedTxnAdapterServer) TxnReverse(ctx context.Context, req *GeneralRequest) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TxnReverse not implemented")
}

func RegisterTxnAdapterServer(s *grpc.Server, srv TxnAdapterServer) {
	s.RegisterService(&_TxnAdapter_serviceDesc, srv)
}

func _TxnAdapter_CheckTxnPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnAdapterServer).CheckTxnPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TxnAdapter/CheckTxnPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnAdapterServer).CheckTxnPermission(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxnAdapter_GetTxnToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnAdapterServer).GetTxnToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TxnAdapter/GetTxnToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnAdapterServer).GetTxnToken(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxnAdapter_CheckTxnIsDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnAdapterServer).CheckTxnIsDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TxnAdapter/CheckTxnIsDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnAdapterServer).CheckTxnIsDone(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxnAdapter_TxnAdvice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnAdapterServer).TxnAdvice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TxnAdapter/TxnAdvice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnAdapterServer).TxnAdvice(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxnAdapter_TxnReverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnAdapterServer).TxnReverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hafhashtad.pb.TxnAdapter/TxnReverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnAdapterServer).TxnReverse(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TxnAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hafhashtad.pb.TxnAdapter",
	HandlerType: (*TxnAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckTxnPermission",
			Handler:    _TxnAdapter_CheckTxnPermission_Handler,
		},
		{
			MethodName: "GetTxnToken",
			Handler:    _TxnAdapter_GetTxnToken_Handler,
		},
		{
			MethodName: "CheckTxnIsDone",
			Handler:    _TxnAdapter_CheckTxnIsDone_Handler,
		},
		{
			MethodName: "TxnAdvice",
			Handler:    _TxnAdapter_TxnAdvice_Handler,
		},
		{
			MethodName: "TxnReverse",
			Handler:    _TxnAdapter_TxnReverse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/mirrorpb/pb.proto",
}
