// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/protobufs/destinationpb/destinationpb.proto

package topupService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TopupRequestType struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Msisdn               string   `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Pin                  string   `protobuf:"bytes,4,opt,name=pin,proto3" json:"pin,omitempty"`
	MobNo                string   `protobuf:"bytes,5,opt,name=mob_no,json=mobNo,proto3" json:"mob_no,omitempty"`
	Amount               int32    `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 int32    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	AddData              string   `protobuf:"bytes,9,opt,name=add_data,json=addData,proto3" json:"add_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopupRequestType) Reset()         { *m = TopupRequestType{} }
func (m *TopupRequestType) String() string { return proto.CompactTextString(m) }
func (*TopupRequestType) ProtoMessage()    {}
func (*TopupRequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fda316b186aaca3, []int{0}
}

func (m *TopupRequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopupRequestType.Unmarshal(m, b)
}
func (m *TopupRequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopupRequestType.Marshal(b, m, deterministic)
}
func (m *TopupRequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopupRequestType.Merge(m, src)
}
func (m *TopupRequestType) XXX_Size() int {
	return xxx_messageInfo_TopupRequestType.Size(m)
}
func (m *TopupRequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_TopupRequestType.DiscardUnknown(m)
}

var xxx_messageInfo_TopupRequestType proto.InternalMessageInfo

func (m *TopupRequestType) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TopupRequestType) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TopupRequestType) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *TopupRequestType) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

func (m *TopupRequestType) GetMobNo() string {
	if m != nil {
		return m.MobNo
	}
	return ""
}

func (m *TopupRequestType) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TopupRequestType) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TopupRequestType) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *TopupRequestType) GetAddData() string {
	if m != nil {
		return m.AddData
	}
	return ""
}

type TopupResponseType struct {
	RespCode             int32    `protobuf:"varint,1,opt,name=resp_code,json=respCode,proto3" json:"resp_code,omitempty"`
	Ref                  string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Serial               string   `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopupResponseType) Reset()         { *m = TopupResponseType{} }
func (m *TopupResponseType) String() string { return proto.CompactTextString(m) }
func (*TopupResponseType) ProtoMessage()    {}
func (*TopupResponseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fda316b186aaca3, []int{1}
}

func (m *TopupResponseType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopupResponseType.Unmarshal(m, b)
}
func (m *TopupResponseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopupResponseType.Marshal(b, m, deterministic)
}
func (m *TopupResponseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopupResponseType.Merge(m, src)
}
func (m *TopupResponseType) XXX_Size() int {
	return xxx_messageInfo_TopupResponseType.Size(m)
}
func (m *TopupResponseType) XXX_DiscardUnknown() {
	xxx_messageInfo_TopupResponseType.DiscardUnknown(m)
}

var xxx_messageInfo_TopupResponseType proto.InternalMessageInfo

func (m *TopupResponseType) GetRespCode() int32 {
	if m != nil {
		return m.RespCode
	}
	return 0
}

func (m *TopupResponseType) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *TopupResponseType) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func init() {
	proto.RegisterType((*TopupRequestType)(nil), "topupService.TopupRequestType")
	proto.RegisterType((*TopupResponseType)(nil), "topupService.TopupResponseType")
}

func init() {
	proto.RegisterFile("pkg/protobufs/destinationpb/destinationpb.proto", fileDescriptor_2fda316b186aaca3)
}

var fileDescriptor_2fda316b186aaca3 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4f, 0x02, 0x31,
	0x10, 0x85, 0x5d, 0x61, 0x97, 0xa5, 0x21, 0x06, 0x9b, 0x68, 0x2a, 0x26, 0x4a, 0x38, 0x71, 0x82,
	0x44, 0xff, 0x81, 0x7a, 0xf2, 0xe0, 0x61, 0xe5, 0xc4, 0x85, 0x74, 0xe9, 0x60, 0x1a, 0xdd, 0x4e,
	0xed, 0x74, 0x35, 0xfc, 0x61, 0x7f, 0x87, 0x69, 0x77, 0x51, 0x30, 0xde, 0xde, 0xfb, 0x5e, 0xd3,
	0xcc, 0x9b, 0x61, 0x73, 0xfb, 0xfa, 0x32, 0xb7, 0x0e, 0x3d, 0x96, 0xf5, 0x86, 0xe6, 0x0a, 0xc8,
	0x6b, 0x23, 0xbd, 0x46, 0x63, 0xcb, 0x43, 0x37, 0x8b, 0xaf, 0xf8, 0xc0, 0xa3, 0xad, 0xed, 0x33,
	0xb8, 0x0f, 0xbd, 0x86, 0xc9, 0x57, 0xc2, 0x86, 0x8b, 0x00, 0x0a, 0x78, 0xaf, 0x81, 0xfc, 0x62,
	0x6b, 0x81, 0x8f, 0x58, 0x5e, 0x13, 0x38, 0x23, 0x2b, 0x10, 0xc9, 0x38, 0x99, 0xf6, 0x8b, 0x1f,
	0x1f, 0x32, 0x2b, 0x89, 0x3e, 0xd1, 0x29, 0x71, 0xdc, 0x64, 0x3b, 0xcf, 0xcf, 0x59, 0x56, 0x91,
	0x26, 0x65, 0x44, 0x27, 0x26, 0xad, 0xe3, 0x43, 0xd6, 0xb1, 0xda, 0x88, 0x6e, 0x84, 0x41, 0xf2,
	0x33, 0x96, 0x55, 0x58, 0xae, 0x0c, 0x8a, 0x34, 0xc2, 0xb4, 0xc2, 0xf2, 0x09, 0xc3, 0x07, 0xb2,
	0xc2, 0xda, 0x78, 0x91, 0x8d, 0x93, 0x69, 0x5a, 0xb4, 0x8e, 0x73, 0xd6, 0xf5, 0x5b, 0x0b, 0xa2,
	0x17, 0x69, 0xd4, 0x81, 0x29, 0xa0, 0xb5, 0xc8, 0xe3, 0x07, 0x51, 0xf3, 0x0b, 0x96, 0x4b, 0xa5,
	0x56, 0x4a, 0x7a, 0x29, 0xfa, 0x91, 0xf7, 0xa4, 0x52, 0x0f, 0xd2, 0xcb, 0xc9, 0x92, 0x9d, 0xb6,
	0x3d, 0xc9, 0xa2, 0x21, 0x88, 0x45, 0x2f, 0x59, 0xdf, 0x01, 0xd9, 0xd5, 0x1a, 0x55, 0xd3, 0x34,
	0x2d, 0xf2, 0x00, 0xee, 0x51, 0x41, 0x98, 0xda, 0xc1, 0xa6, 0x2d, 0x19, 0x64, 0x18, 0x8f, 0xc0,
	0x69, 0xf9, 0xb6, 0xeb, 0xd7, 0xb8, 0x9b, 0x25, 0x1b, 0x2c, 0xf6, 0x96, 0xca, 0x1f, 0x59, 0x1a,
	0x3d, 0xbf, 0x9a, 0xed, 0x2f, 0x7b, 0xf6, 0x77, 0xd1, 0xa3, 0xeb, 0x7f, 0xf3, 0xdf, 0x01, 0x27,
	0x47, 0x77, 0x27, 0xcb, 0x83, 0x83, 0x95, 0x59, 0xbc, 0xe2, 0xed, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x9f, 0x73, 0xcc, 0xe3, 0xf8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TopupServiceClient is the client API for TopupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopupServiceClient interface {
	Topup(ctx context.Context, in *TopupRequestType, opts ...grpc.CallOption) (*TopupResponseType, error)
}

type topupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTopupServiceClient(cc grpc.ClientConnInterface) TopupServiceClient {
	return &topupServiceClient{cc}
}

func (c *topupServiceClient) Topup(ctx context.Context, in *TopupRequestType, opts ...grpc.CallOption) (*TopupResponseType, error) {
	out := new(TopupResponseType)
	err := c.cc.Invoke(ctx, "/topupService.TopupService/Topup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopupServiceServer is the server API for TopupService service.
type TopupServiceServer interface {
	Topup(context.Context, *TopupRequestType) (*TopupResponseType, error)
}

// UnimplementedTopupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTopupServiceServer struct {
}

func (*UnimplementedTopupServiceServer) Topup(ctx context.Context, req *TopupRequestType) (*TopupResponseType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Topup not implemented")
}

func RegisterTopupServiceServer(s *grpc.Server, srv TopupServiceServer) {
	s.RegisterService(&_TopupService_serviceDesc, srv)
}

func _TopupService_Topup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopupRequestType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopupServiceServer).Topup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topupService.TopupService/Topup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopupServiceServer).Topup(ctx, req.(*TopupRequestType))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topupService.TopupService",
	HandlerType: (*TopupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Topup",
			Handler:    _TopupService_Topup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protobufs/destinationpb/destinationpb.proto",
}
